import { GetRegulatoryReportsQuery } from '../get-regulatory-reports.query';

describe('GetRegulatoryReportsQuery', () => {
  it('should create query with organizationId and no optional parameters', () => {
    const organizationId = 'test-org-id';
    const query = new GetRegulatoryReportsQuery(organizationId);
    expect(query.organizationId).toBe(organizationId);
    expect(query.filters).toBeUndefined();
    expect(query.pagination).toBeUndefined();
    expect(query.sort).toBeUndefined();
  });

  it('should create query with filters', () => {
    const organizationId = 'test-org-id';
    const filters = {
      reportType: 'monthly',
      status: 'pending',
      regulatoryAgency: 'EPA',
      wellId: 'well-123',
      startDate: new Date('2023-01-01'),
      endDate: new Date('2023-12-31'),
      priority: 'high',
      isOverdue: false,
      isAutoGenerated: true,
    };
    const query = new GetRegulatoryReportsQuery(organizationId, filters);
    expect(query.organizationId).toBe(organizationId);
    expect(query.filters).toEqual(filters);
  });

  it('should create query with pagination', () => {
    const organizationId = 'test-org-id';
    const pagination = {
      page: 2,
      limit: 20,
    };
    const query = new GetRegulatoryReportsQuery(
      organizationId,
      undefined,
      pagination,
    );
    expect(query.organizationId).toBe(organizationId);
    expect(query.pagination).toEqual(pagination);
  });

  it('should create query with sort', () => {
    const organizationId = 'test-org-id';
    const sort = {
      field: 'dueDate',
      direction: 'desc' as const,
    };
    const query = new GetRegulatoryReportsQuery(
      organizationId,
      undefined,
      undefined,
      sort,
    );
    expect(query.organizationId).toBe(organizationId);
    expect(query.sort).toEqual(sort);
  });

  it('should be an instance of GetRegulatoryReportsQuery', () => {
    const query = new GetRegulatoryReportsQuery('org');
    expect(query).toBeInstanceOf(GetRegulatoryReportsQuery);
  });
});
